---
import type { CollectionEntry } from 'astro:content'
import type { Sidebar } from '../config'
import { getCollection } from 'astro:content'
import Base from './base.astro'
import PageContent from '../components/pagecontent.astro'
import LeftSidebar from '../components/leftsidebar.astro'
import RightSidebar from '../components/rightsidebar.astro'
import NextPrev from '../components/nextprev.astro'
import * as CONFIG from '../config'
import type { MarkdownHeading } from 'astro'

type Props = {
  frontmatter: CollectionEntry<'doc'>['data']
  headings: MarkdownHeading[]
}

const { frontmatter, headings } = Astro.props
const currentPage = Astro.url.toString()
const currentFile = `src/content/${Astro.url.pathname
  .replace(import.meta.env.BASE_URL, '')
  .replace(/\/$/, '')}.md`
const githubEditUrl = `${CONFIG.GITHUB_EDIT_URL}/${currentFile}`

const allDocs = await getCollection('doc')
const docs = allDocs.sort((a, b) => a.data.weight - b.data.weight).filter((p) => !p.data.draft)
const sections = Array.from(new Set(docs.map((doc) => doc.data.section))) as string[]

let sidebar = {} as Sidebar
sections.forEach(
  (section) =>
    (sidebar[section] = docs
      .filter((doc) => doc.data.section == section)
      .map((doc) => ({
        text: doc.data.title,
        link: 'doc/' + doc.slug
      })))
)

let prev: CollectionEntry<'doc'> | undefined
let next: CollectionEntry<'doc'> | undefined
docs.forEach((doc, i) => {
  if (currentPage.search(doc.slug) >= 0) {
    if (i > 0) {
      prev = docs[i - 1]
    }
    if (i < docs.length - 1) {
      next = docs[i + 1]
    }
  }
})
const basefm: CollectionEntry<'page'>['data'] = {
  // draft: frontmatter.draft,
  title: frontmatter.title,
  description: frontmatter.description
}
---

<Base frontmatter={basefm}>
  <main
    class='max-w-8xl relative mx-auto flex justify-center bg-gray-900 text-gray-200 font-medium sm:px-2 lg:px-8 xl:px-12'
  >
    <aside id='grid-left' class='grid-sidebar bg-gray-800 text-gray-300 lg:p-6' title='Site Navigation'>
      <LeftSidebar currentPage={currentPage} sidebar={sidebar} />
    </aside>
    <div id='grid-main' class='bg-gray-850 p-6 shadow-lg rounded-lg'>
      <PageContent frontmatter={frontmatter} headings={headings} githubEditUrl={githubEditUrl}>
        <section class='prose prose-lg text-gray-300'>
          <slot />
        </section>
        <NextPrev base={import.meta.env.BASE_URL + 'doc'} prev={prev} next={next} />
      </PageContent>
    </div>
        <!-- <aside id='grid-right' class='grid-sidebar' title='Table of Contents'>
      <RightSidebar headings={headings} githubEditUrl={githubEditUrl} />
    </aside> -->
  </main>
</Base>
